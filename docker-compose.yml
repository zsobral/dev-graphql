version: '2.3'

services:
  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
      args:
        - NODE_ENV=development
    command: nodemon src/index.js
    ports:
      - '80:3000'
    volumes:
      - ./gateway:/app/gateway
      - gateway-node-modules:/app/gateway/node_modules
    env_file:
      - ./gateway/.env.development

  account:
    build:
      context: .
      dockerfile: ./services/account/Dockerfile
      args:
        - NODE_ENV=development
    command: nodemon src/index.js
    volumes:
      - ./services/account:/app/services/account
      - account-node-modules:/app/services/account/node_modules
    env_file:
      - ./services/account/.env.development

  content:
    build:
      context: .
      dockerfile: ./services/content/Dockerfile
      args:
        - NODE_ENV=development
    command: nodemon src/index.js
    volumes:
      - ./services/content:/app/services/content:delegated
      - content-node-modules:/app/services/content/node_modules
    env_file:
      - ./services/content/.env.development

  profile:
    build:
      context: .
      dockerfile: ./services/profile/Dockerfile
      args:
        - NODE_ENV=development
    command: nodemon src/index.js
    volumes:
      - ./services/profile:/app/services/profile:delegated
      - profile-node-modules:/app/services/profile/node_modules
    env_file:
      - ./services/profile/.env.development

  profile-mongo:
    image: mongo:4.2-bionic
    restart: always
    volumes:
      - profile-db:/data/db
    logging:
      driver: none

  content-mongo:
    image: mongo:4.2-bionic
    restart: always
    volumes:
      - content-db:/data/db
    logging:
      driver: none

volumes:
  profile-db:
  content-db:
  gateway-node-modules:
  account-node-modules:
  content-node-modules:
  profile-node-modules:
